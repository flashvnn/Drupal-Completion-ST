<snippet>
  <tabTrigger>hook_tokens(\$type,</tabTrigger>
  <content><![CDATA[/**
 * Implements hook_tokens(\$type, \$tokens, array \$data = array(), array \$options = array().
 */
function ${TM_FILENAME/([^.]*)\..*$/$1/}_tokens(\$type, \$tokens, array \$data = array(), array \$options = array()) {
  \$replacements = array();

  /*
   *  \$url_options = array('absolute' => TRUE);
   *  if (isset(\$options['language'])) {
   *    \$url_options['language'] = \$options['language'];
   *    \$language_code = \$options['language']->language;
   *  }
   *  else {
   *    \$language_code = NULL;
   *  }
   *  \$sanitize = !empty(\$options['sanitize']);
   *
   *  \$replacements = array();
   *
   *  if (\$type == 'node' && !empty(\$data['node'])) {
   *    \$node = \$data['node'];
   *
   *    foreach (\$tokens as \$name => \$original) {
   *      switch (\$name) {
   *        // Simple key values on the node.
   *        case 'nid':
   *          \$replacements[\$original] = \$node->nid;
   *          break;
   *
   *        case 'title':
   *          \$replacements[\$original] = \$sanitize ? check_plain(\$node->title) : \$node->title;
   *          break;
   *
   *        case 'edit-url':
   *          \$replacements[\$original] = url('node/' . \$node->nid . '/edit', \$url_options);
   *          break;
   *
   *        // Default values for the chained tokens handled below.
   *        case 'author':
   *          \$name = (\$node->uid == 0) ? variable_get('anonymous', t('Anonymous')) : \$node->name;
   *          \$replacements[\$original] = \$sanitize ? filter_xss(\$name) : \$name;
   *          break;
   *
   *        case 'created':
   *          \$replacements[\$original] = format_date(\$node->created, 'medium', '', NULL, \$language_code);
   *          break;
   *      }
   *    }
   *
   *    if (\$author_tokens = token_find_with_prefix(\$tokens, 'author')) {
   *      \$author = user_load(\$node->uid);
   *      \$replacements += token_generate('user', \$author_tokens, array('user' => \$author), \$options);
   *    }
   *
   *    if (\$created_tokens = token_find_with_prefix(\$tokens, 'created')) {
   *      \$replacements += token_generate('date', \$created_tokens, array('date' => \$node->created), \$options);
   *    }
   *  }
   */
  ${1:/* Your code here */}

  return \$replacements;
}
]]></content>
</snippet>